version: "3.7"

services:

  dynamodb:
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -sharedDb
    container_name: dynamodb
    hostname: dynamodb
    restart: always
    environment:
      - reschedule=on-node-failure
      - AWS_SDK_LOAD_CONFIG=1
    expose:
      - 8000
    ports:
      - "8000:8000"
    volumes:
      - ./docker/volumes/dynamo:/home/dynamodblocal/data
    networks:
      - net

# cache tables
  punch-table:
    image: garland/aws-cli-docker
    command: "aws dynamodb create-table --table-name ${DYNAMO_PUNCH_TABLE} --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://dynamodb:${DYNAMO_PORT}"
    links:
      - dynamodb
    environment:
      - DYNAMO_PUNCH_TABLE=${DYNAMO_PUNCH_TABLE}
      - DYNAMO_PORT=${DYNAMO_PORT}
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - net

  downtime-table:
    image: garland/aws-cli-docker
    command: "aws dynamodb create-table --table-name ${DYNAMO_DOWNTIME_TABLE} --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://dynamodb:${DYNAMO_PORT}"
    links:
      - dynamodb
    environment:
      - DYNAMO_DOWNTIME_TABLE=${DYNAMO_DOWNTIME_TABLE}
      - DYNAMO_PORT=${DYNAMO_PORT}
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - net

  pardon-table:
    image: garland/aws-cli-docker
    command: "aws dynamodb create-table --table-name ${DYNAMO_PARDON_TABLE} --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://dynamodb:${DYNAMO_PORT}"
    links:
      - dynamodb
    environment:
      - DYNAMO_PARDON_TABLE=${DYNAMO_PARDON_TABLE}
      - DYNAMO_PORT=${DYNAMO_PORT}
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - net

# API
  dash-api:
    restart: always
    volumes:
      - ./dash-api:/usr/app
      # map local credentials to the container so that it has acces to AWS
      - $HOME/.aws/config:/root/.aws/config:ro
      - $HOME/.aws/credentials:/root/.aws/credentials:ro
      - /usr/app/node_modules
    build:
      args:
        - SSH_KEY=${SSH_KEY}
        - PORT=${PORT_DASH_API}
      context: ./dash-api
      dockerfile: Dockerfile
    env_file:
      - ./.env
      - ./.env.secret
    # override any environment variables here
    environment:
      - PORT=${PORT_DASH_API}
      - DYNAMO_HOST=dynamodb
    expose:
      - "${PORT_DASH_API}"
    ports:
      - "${PORT_DASH_API}:${PORT_DASH_API}"
    networks:
      - net
    depends_on:
      - dynamodb
      - punch-table
      - downtime-table
      - pardon-table
    command:
      [
        "yarn",
        "start",
      ]
    stdin_open: true
    tty: true

# APP
  dash-app:
    restart: always
    depends_on:
      dash-api:
        condition: service_healthy
    volumes:
      - ./dash-app:/usr/app
      - /usr/app/node_modules
    build:
      args:
        - SSH_KEY=${SSH_KEY}
        - PORT=${PORT_DASH_APP}
      context: ./dash-app
      dockerfile: Dockerfile
    env_file:
      - ./.env
      - ./.env.secret
    environment:
      - PORT=${PORT_DASH_APP}
    expose:
      - "${PORT_DASH_APP}"
    ports:
      - "${PORT_DASH_APP}:${PORT_DASH_APP}"
    command: ["yarn", "start"]
    networks:
      - net

networks:
  net: